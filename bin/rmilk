#!/usr/bin/env ruby
require 'gli'
require 'rmilk'
require 'milkman'

include GLI::App

program_desc 'Describe your application here'

version Rmilk::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]

desc 'Describe add here'
arg_name 'Describe arguments to add here'
command :add do |c|
  c.desc 'Describe a switch to add'
  c.switch :s

  c.desc 'Name of list to add task to.'
  c.default_value 'Inbox'
  c.flag [:l, :list]
  c.action do |global_options,options,args|

    client = Milkman::Client.new api_key: API_KEY, shared_secret: SHARED_SECRET, auth_token: AUTH_TOKEN
    lists = client.get("rtm.lists.getList")["rsp"]["lists"]["list"]
    list_id = lists.find { |list| list["name"] == options[:l] }["id"]

    timeline = client.get("rtm.timelines.create")["rsp"]["timeline"]

    resp = client.get "rtm.tasks.add", { name: args[0], timeline: timeline, list_id: list_id}
    puts resp

    puts "Added #{args[0]} to list #{options[:l]}(#{list_id})"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
